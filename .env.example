# WhatsApp Cloud API Configuration
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id
WHATSAPP_ACCESS_TOKEN=your_access_token
WHATSAPP_VERIFY_TOKEN=your_webhook_verify_token

# LLM Provider Configuration
# Choose provider: 'openai' or 'gemini'
LLM_PROVIDER=gemini
LLM_MAX_TOKENS=3000

# OpenAI Configuration (if using LLM_PROVIDER=openai)
OPENAI_API_KEY=your_openai_api_key
OPENAI_MODEL=gpt-4o-mini
OPENAI_MAX_TOKENS=3000

# Gemini Configuration (if using LLM_PROVIDER=gemini)
# For Vertex AI Authentication - Choose ONE method:

# Required for all methods:
GOOGLE_CLOUD_PROJECT=your-gcp-project-id
GOOGLE_CLOUD_LOCATION=us-central1
GEMINI_MODEL=gemini-2.0-flash

# Method 1: Base64 encoded key (EASIEST - recommended for Coolify)
# Run: cat service-account-key.json | base64
# Then paste the output here:
# GOOGLE_SERVICE_ACCOUNT_KEY_BASE64=your-base64-encoded-service-account-key

# Method 2: JSON string (alternative for Coolify)
# Paste the entire JSON content as a single line:
# GOOGLE_SERVICE_ACCOUNT_KEY_JSON={"type":"service_account","project_id":"..."}

# Method 3: File mount (for local Docker development)
# Path to service account key file on host machine
GOOGLE_APPLICATION_CREDENTIALS_HOST=./service-account-key.json
# Path inside container (auto-configured, no need to change)
# GOOGLE_APPLICATION_CREDENTIALS=/app/.gcloud/service-account-key.json

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/halisaha
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=halisaha

# Redis Configuration
REDIS_URL=redis://redis:6379

# Server Configuration
PORT=3000
NODE_ENV=production
